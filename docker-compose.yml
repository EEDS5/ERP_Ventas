# docker-compose.yml
# ➤ Desarrollo local: build del backend y frontend

# docker-compose.prod.yml
# ➤ Producción: usa imágenes del ACR
services:
  db:
    image: postgres:17
    container_name: postgres_db
    environment:
      POSTGRES_USER: erp_user
      POSTGRES_PASSWORD: erp_pass
      POSTGRES_DB: ERP_Ventas
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  flyway:
    image: flyway/flyway:latest
    container_name: flyway_migrator
    depends_on:
      - db
    volumes:
      - ./db/sql:/flyway/sql
      - ./db/flyway.conf:/flyway/conf/flyway.conf
    command: migrate

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring_boot_backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/ERP_Ventas
      SPRING_DATASOURCE_USERNAME: erp_user
      SPRING_DATASOURCE_PASSWORD: erp_pass
      MAIL_USERNAME: elias674559@gmail.com
      MAIL_PASSWORD: nyrrkwpwjjvdbuwq
      SERVER_PORT: 8080
      PAYPAL_CLIENT_ID: Ab4msEZJ1ai-ywG5_g6rBsaoR0x0QjKz-IKyI-rZMdXkqmshF5r7Ft_YTU8n1latQ2WyJlMZk3lMD6b8
      PAYPAL_SECRET: ENmSkBX25fe2pd7fO7bvzjR-jiqBvXkIxWo-VW2DT1kj8otEOTXrfLSNoRSbQxB17_-OSrgR1qVbZijK
    ports:
      - "8080:8080"
    depends_on:
      - db
      - flyway

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: angular_frontend
    ports:
      #- "4200:4200"
      - "4200:80"  # Producción con Nginx

    # Uncomment the following lines for production with Nginx
    volumes:
      - ./frontend:/app

    #command: > # ⬅ Solo se ejecuta en desarrollo
    #  sh -c "npm ci && 
    #         ng serve --host 0.0.0.0 --port 4200 --proxy-config proxy.conf.json"

    depends_on:
      - backend

volumes:
  postgres_data: